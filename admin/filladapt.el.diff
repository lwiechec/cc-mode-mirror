--- filladapt-orig.el	2014-12-07 10:59:35.000000000 +0000
+++ filladapt.el	2019-06-07 10:43:29.291961622 +0000
@@ -18,6 +18,11 @@
 ;;;
 ;;; Send bug reports to kyle_jones@wonderworks.com
 
+;; This version has been patched to add the
+;; filladapt-token-match-empty feature.  Patch made by Martin
+;; Stjernholm <bug-cc-mode@gnu.org>; see
+;; <http://cc-mode.sourceforge.net/filladapt.php> for details.
+
 ;; LCD Archive Entry: 
 ;; filladapt|Kyle Jones|kyle_jones@wonderworks.com| 
 ;; Minor mode to adaptively set fill-prefix and overload filling functions|
@@ -86,7 +91,7 @@
     (defmacro defgroup (&rest args)
       nil)
     (defmacro defcustom (var value doc &rest args) 
-      (` (defvar (, var) (, value) (, doc))))))
+      `(defvar ,var ,value ,doc))))
 
 (defgroup filladapt nil
   "Enhanced filling"
@@ -324,6 +329,13 @@
 				      (const spaces))))
   :group 'filladapt)
 
+(defcustom filladapt-token-match-empty '(beginning-of-line end-of-line)
+  "List of tokens that may match the empty string.
+Normally a token is ignored if it matches the empty string.  This list
+contains the tokens that should be excluded from that rule."
+  :type '(repeat symbol)
+  :group 'filladapt)
+
 (defvar filladapt-function-table
   (let ((assoc-list
 	 (list (cons 'fill-paragraph (symbol-function 'fill-paragraph))
@@ -665,7 +677,10 @@
 	  (setq token-table filladapt-token-table
 		done t)
 	  (while token-table
-	    (if (null (looking-at (car (car token-table))))
+	    (if (or (null (looking-at (car (car token-table))))
+		    (and (not (memq (car (cdr (car token-table)))
+				    filladapt-token-match-empty))
+			 (eq (match-beginning 0) (match-end 0))))
 		(setq token-table (cdr token-table))
 	      (goto-char (match-end 0))
 	      (setq token-list (cons (list (nth 1 (car token-table))
